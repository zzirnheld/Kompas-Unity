{
	"cardType": 67,
	"cardName": "5H4P3R",
	"effText": "Nimble Golem.\nWhen I move directly across a card, destroy it and give me -1 E.",
	"effects": [
		{
			"triggerData": {
				"triggerCondition": "Move",
				"triggerRestriction": {
					"triggerRestrictionElements": [
                        {
                            "$type": "KompasCore.Effects.Restrictions.CardsMatchTriggerRestrictionElement, Assembly-CSharp",
                            "firstCardIdentity": { "$type": "KompasCore.Effects.Identities.ThisCardContextCardIdentity, Assembly-CSharp" },
                            "secondCardIdentity": { "$type": "KompasCore.Effects.Identities.MainCardBeforeCardIdentity, Assembly-CSharp" }
                        },
                        {
                            "$type": "KompasCore.Effects.Restrictions.CardRestrictionTriggerRestrictionElement, Assembly-CSharp",
                            "cardRestriction": {
                                "cardRestrictionElements": [ { "$type": "KompasCore.Effects.Restrictions.CardExistsRestrictionElement, Assembly-CSharp" } ]
                            },
                            "activationContextCardIdentity": {
                                "$type": "KompasCore.Effects.Restrictions.CardAtPositionContextCardIdentity, Assembly-CSharp",
                                "cardPositionIdentity": {
                                    "$type": "KompasCore.Effects.Identities.TwoSpaceIdentityContextSpaceIdentity, Assembly-CSharp",
                                    "firstSpaceIdentity": {
                                        "$type": "KompasCore.Effects.Identities.CardPositionContextSpaceIdentity, Assembly-CSharp",
                                        "cardIdentity": { "$type": "KompasCore.Effects.Identities.MainCardBeforeCardIdentity, Assembly-CSharp" }
                                    },
                                    "secondSpaceIdentity": { "$type": "KompasCore.Effects.Identities.ContextSpaceIdentity, Assembly-CSharp" },
                                    "compositionSpaceIdentity": { "$type": "KompasCore.Effects.Identities.SpaceBetweenTwoSpaceIdentity, Assembly-CSharp" }
                                }
                            }
                        }
					]
				}
			},
			"subeffects": [
				{
					"$type": "KompasServer.Effects.AutoTargetCardIdentitySubeffect, Assembly-CSharp",
					"subeffectCardIdentity": {
                        "$type": "KompasCore.Effects.Restrictions.ActivationContextSubeffectCardIdentity, Assembly-CSharp",
                        "contextCardIdentity": {
                            "$type": "KompasCore.Effects.Restrictions.CardAtPositionContextCardIdentity, Assembly-CSharp",
                            "cardPositionIdentity": {
                                "$type": "KompasCore.Effects.Identities.TwoSpaceIdentityContextSpaceIdentity, Assembly-CSharp",
                                "firstSpaceIdentity": {
                                    "$type": "KompasCore.Effects.Identities.CardPositionContextSpaceIdentity, Assembly-CSharp",
                                    "cardIdentity": { "$type": "KompasCore.Effects.Identities.MainCardBeforeCardIdentity, Assembly-CSharp" }
                                },
                                "secondSpaceIdentity": { "$type": "KompasCore.Effects.Identities.ContextSpaceIdentity, Assembly-CSharp" },
                                "compositionSpaceIdentity": { "$type": "KompasCore.Effects.Identities.SpaceBetweenTwoSpaceIdentity, Assembly-CSharp" }
                            }
                        }
					}
				},
				{
					"$type": "KompasServer.Effects.DiscardSubeffect, Assembly-CSharp"
				},
				{
					"$type": "KompasServer.Effects.TargetThisSubeffect, Assembly-CSharp"
				},
				{
					"$type": "KompasServer.Effects.ChangeCardStatsSubeffect, Assembly-CSharp",
					"eModifier": -1
				}
			]
		}
    ],
	"MovementRestriction": {
		"normalRestrictionsFromJson": [
			"Default",
			"Activated",
			"Can Move Enough Through Empty or Restricted Spaces"
		],
		"normalRestrictionsToIgnore": [
			"Can Move Enough Spaces"
		],
		"throughSpacesRestriction": {
			"spaceRestrictions": []
		}
	},
	"AttackRestriction": {
		"attackRestrictions": [
			"Default",
			"This is Activated"
		]
	},
	"n": 2,
	"e": 4,
	"s": 7,
	"w": 4,
	"subtypes": [
		"Mech",
		"Golem"
	],
	"subtypeText": "Mech Golem"
}