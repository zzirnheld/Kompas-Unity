{
	"cardType": 83,
	"cardName": "Unlock the Past",
	"effText": "Tribute an adjacent Vessel's Memory. Deck->bestow 2 distinct Memories unto that Vessel.",
	"effects": [
		{
			"triggerData": {
				"triggerCondition": "Play",
				"triggerRestriction": {
					"triggerRestrictions": [
						"This Card is Main Card"
					]
				}
			},
			"subeffects": [
				{
					"$type": "Subeffect:CardTarget:",
					"cardRestriction": {
						"blurb": "Vessel's Memory to unlock",
						"cardRestrictions": [
							"Augment",
							"Space Fits Restriction"
                        ],
						"spaceRestriction": {
							"spaceRestrictions": [
								"Adjacent to Source"
							]
						},
						"cardRestrictionElements": [
							{ "$type": "Core.CardRestriction:Friendly:" },
							{
								"$type": "Core.CardRestriction:SubtypesInclude:",
								"subtypes": [ "Memory" ]
							},
							{
								"$type": "Core.CardRestriction:Augments:",
                                "cardRestriction": {
                                    "cardRestrictionElements": [
                                        {
                                            "$type": "Core.CardRestriction:SubtypesInclude:",
                                            "subtypes": [ "Vessel" ]
                                        }
                                    ]
                                }
							}
						]
					}
				},
				{
					"$type": "Subeffect:TargetTargetsAugmentedCard:"
				},
				{
					"$type": "Subeffect:Discard:",
                    "targetIndex": -2
				},
				{
					"$type": "Subeffect:ChooseFromList:",
					"cardRestriction": {
						"blurb": "Memories to search for",
						"cardRestrictions": [
							"Deck"
                        ],
						"cardRestrictionElements": [
							{ "$type": "Core.CardRestriction:Friendly:" },
							{
								"$type": "Core.CardRestriction:SubtypesInclude:",
								"subtypes": [ "Memory" ]
							}
						]
					},
					"listRestriction": {
						"listRestrictions": [
							"Min Can Choose",
							"Max Can Choose"
						],
						"minCanChoose": 2,
						"maxCanChoose": 2
					}
				},
				{
					"$type": "Subeffect:Attach:",
					"targetToAttachTo": 1,
					"targetIndex": -1
				},
				{
					"$type": "Subeffect:LoopWhileHaveTargets:",
					"delete": true,
					"remainingTargets": 2,
					"jumpIndices": [
						4
					]
				}
			]
		}
	],
	"c": 1,
	"spellTypes": [
		"Simple"
	],
	"subtypes": [
		"Simple"
	],
	"subtypeText": "Simple"
}